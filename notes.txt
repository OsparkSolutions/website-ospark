- create folder that holds shared snippets of code
- run in cmd 'npm init', call the package name 'toolkit', initial version '0.0.1',
- link to this package from the new ospark website folder
- from ospark website, run an npm install and give it file location of this new folder ('npm install ../toolkit')
- then create subdirectory folder called 'react' inside of the toolkit directory
- in this react folder create a 'ts' file called 'layoutHooks'




- Create a react hook that is going to change when the window size changes
- use 'debouncing' - creating a set of rules to prevent to many renders of the react page while resizing browser

	1. Add event listener to the window for the resize event (only add it once in the components lifecycle)
	2. When the event listener triggers, set a timeout of a 300ms to trigger a 'state update'
	3. We want this hook to output an object that will have its current height and width of the window, and a size breakpoint
		-This object should return : height, width, breakpoint(aka device size)

	*useState, useEffect, useRef will need to be used


Hooks can only be used inside of components,

useEffect only runs once with empty array '[]' as dependency, no [] means it will run everytime

Contact Us:
	1. display form fullscreen
		-when form is open make sure scroll bar on the body is hidden
		-when it is closed turn the scroll bar back on (all done through js)
	2. On form, display firstName, lastName as two textboxes, dropdown with multiple options, multi-line textbow that is resizeable ony in y-direction, submit button (when clicked have alert with data submitted), clear button
	3. Make sure everything is bound, 

CONDIIONALLY HIDE REACT COMPONENTS { expression && <Component />}

ALT SHIFT F: FORMAT CODE

function ====== is a variable that holds the function
function() =====result of the function, its return value

IMPORTANT VOCAB:

LITERAL: what a variable points to in memory
VARIABLES:
PARAMATERS:
KEYWORDS: ex. let, const

MergeSyles:
-can nest oher elements to achieve organized styling

boolean followed by && <Element> to hide por show jsx

HTTP Status Code:
	Returns status codes as numbers ex(303, 404,...)

fetch:
	-Method to make web calls




